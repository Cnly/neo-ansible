- name: Create required directories
  file: path={{ item.path }} state=directory mode=0755
  loop:
      - { path: '/etc/neo' }
      - { path: '/etc/neo/nss' }
      - { path: '/opt/neo' }
      - { path: '/opt/neo/v2ray' }
      - { path: '/opt/neo/nss' }
      - { path: '/opt/neo/neostats' }
      - { path: '/opt/neo/neostats/web' }
      - { path: '/var/neo' }
      - { path: '/var/neo/neostats' }

- name: Create /var/log/v2ray_neo.access.log
  copy:
      content: ""
      dest: /var/log/v2ray_neo.access.log
      mode: 0666
      force: no

- name: Deploy neostats toolset
  template: src={{ item.src }} dest={{ item.dest }} mode=0755
  loop:
      - { src: 'neostats/neostats.py.j2', dest: '/opt/neo/neostats/neostats.py' }
      - { src: 'neostats/prepareneostats.sh.j2', dest: '/opt/neo/neostats/prepareneostats.sh' }
      - { src: 'neostats/resetneostats.sh.j2', dest: '/opt/neo/neostats/resetneostats.sh' }
  notify:
      - restart neostats

- name: Deploy neostats systemd unit
  template: src=neostats/neo-neostats.service.j2 dest=/etc/systemd/system/neo-neostats.service
  notify:
      - restart neostats

- name: Start neostats service
  systemd:
      name: neo-neostats
      state: started
      enabled: yes
      daemon_reload: yes

- name: Deploy neostats rotation unit
  template: src={{ item.src }} dest={{ item.dest }}
  loop:
      - { src: 'neostats/neo-neostats-rotate.service.j2', dest: '/etc/systemd/system/neo-neostats-rotate.service' }
      - { src: 'neostats/neo-neostats-rotate.timer.j2', dest: '/etc/systemd/system/neo-neostats-rotate.timer' }
  notify:
      - restart neostats timer

- name: Start neostats rotation timer
  systemd:
      name: neo-neostats-rotate.timer
      state: started
      enabled: yes
      daemon_reload: yes

- name: Deploy neostats webpage
  template: src=neostats/index.html.j2 dest=/opt/neo/neostats/web/index.html

- name: Deploy nss executable
  copy: src=files/nss dest=/opt/neo/nss/nss mode=0755
  notify:
      - restart neo-nss

- name: Deploy nss systemd unit and config
  template: src={{ item.src }} dest={{ item.dest }}
  loop:
      - { src: 'neo-nss.service.j2', dest: '/etc/systemd/system/neo-nss.service' }
      - { src: 'nss.config.json.j2', dest: '/etc/neo/nss/config.json' }
  notify:
      - restart neo-nss

- name: Start nss service
  systemd:
      name: neo-nss
      state: started
      enabled: yes
      daemon_reload: yes

- name: Transfer v2ray zip file
  copy:
      src: files/v2ray.zip
      dest: /opt/neo/
  notify:
      - deploy v2ray

- name: Deploy v2ray systemd unit and config
  template: src={{ item.src }} dest={{ item.dest }}
  loop:
      - { src: 'neo-v2ray.service.j2', dest: '/etc/systemd/system/neo-v2ray.service' }
      - { src: 'v2ray.config.json.j2', dest: '/etc/neo/v2ray.config.json' }
  notify:
      - restart neo-v2ray

- name: Start v2ray service
  systemd:
      name: neo-v2ray
      state: started
      enabled: yes
      daemon_reload: yes

- name: Deploy /etc/network/if-* scripts
  template: src={{ item.src }} dest={{ item.dest }} mode=0755
  loop:
      - { src: 'mptcp-up.j2', dest: '/etc/network/if-up.d/mptcp-up' }
      - { src: 'mptcp-down.j2', dest: '/etc/network/if-post-down.d/mptcp-down' }
  notify:
      - restart neo interfaces

- name: Deploy /etc/network/interfaces.d/neo-interfaces
  template: src=neo-interfaces.j2 dest=/etc/network/interfaces.d/neo-interfaces
  notify:
      - restart neo interfaces
